USE DATABASE SIM_BOM;

CREATE OR REPLACE PROCEDURE SIM_BOM.BMATHUB_BASE.P_ROOT_CORE_BUILD()
RETURNS STRING 
LANGUAGE SQL
AS
BEGIN

    --Update data T_ORIG_BOM location from location table.
    UPDATE SIM_BOM.BMATHUB_BASE.T_ORIG_BOM AS TOB
    SET LOC = 
        LR.LOCATION_ID 
        FROM SIM_BOM.BMATHUB_BASE.T_LOCATION_ROOT AS LR
    WHERE LR.ITEM_ID = TOB.INPUT_ITEM_ID;

    --Insert data into T_COMPRESS_BOM from T_ORIG_BOM
    INSERT INTO SIM_BOM.BMATHUB_BASE.T_COMPRESS_BOM (INPUT_ITEM_ID, ITEM_CLASS_NM, OUTPUT_ITEM_ID, BOM_NUM, LOC)
    SELECT 
        TOB.INPUT_ITEM_ID,
        TOB.ITEM_CLASS_NM,
        TOB.OUTPUT_ITEM_ID,
        SIM_BOM.BMATHUB_BASE.GENERATE_BOM_NUM.NEXTVAL,
        COALESCE(
            TMR.LOCATION_ID,
            TOB.LOC
        ) AS LOC
    FROM 
        SIM_BOM.BMATHUB_BASE.T_ORIG_BOM AS TOB
    LEFT JOIN 
        SIM_BOM.BMATHUB_BASE.T_METADATA_RULES AS TMR
    ON TOB.ITEM_CLASS_NM = TMR.ITEM_CLASS_NM;

    INSERT INTO SIM_BOM.BMATHUB_BASE.T_COMPRESS_BOM_CORE (ITEM, ITEM_CLASS_NM, ANCHOR_ITEM_ID, BOM_NUM, LOC, CREATE_DATE, CREATE_USER)
    SELECT 
        TCB.INPUT_ITEM_ID,
        TCB.ITEM_CLASS_NM,
        T2.INPUT_ITEM_ID,
        TCB.BOM_NUM,
        TCB.LOC,
        CURRENT_DATE AS CREATE_DATE,
        'USER1' AS CREATE_USER
    FROM SIM_BOM.BMATHUB_BASE.T_COMPRESS_BOM AS TCB
    JOIN SIM_BOM.BMATHUB_BASE.T_ORIG_BOM AS T1 ON T1.OUTPUT_ITEM_ID = TCB.INPUT_ITEM_ID
    JOIN SIM_BOM.BMATHUB_BASE.T_ORIG_BOM AS T2 ON T2.OUTPUT_ITEM_ID = T1.INPUT_ITEM_ID 
    WHERE TCB.ITEM_CLASS_NM = 'IC' AND T1.ITEM_CLASS_NM = 'UPI_DIEPREP' AND T2.ITEM_CLASS_NM = 'UPI_SORT';

    RETURN 'Data Inserted Successfully';
END;

CALL SIM_BOM.BMATHUB_BASE.P_ROOT_CORE_BUILD();
